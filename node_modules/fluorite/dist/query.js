'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultipleRowsQuery = exports.SingleRowQuery = undefined;

var _asyncIterator2 = require('babel-runtime/helpers/asyncIterator');

var _asyncIterator3 = _interopRequireDefault(_asyncIterator2);

var _asyncGenerator2 = require('babel-runtime/helpers/asyncGenerator');

var _asyncGenerator3 = _interopRequireDefault(_asyncGenerator2);

var _symbol = require('babel-runtime/core-js/symbol');

var _symbol2 = _interopRequireDefault(_symbol);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _values = require('babel-runtime/core-js/object/values');

var _values2 = _interopRequireDefault(_values);

var _lodash = require('lodash');

var _streamToAsyncIterator = require('stream-to-async-iterator');

var _streamToAsyncIterator2 = _interopRequireDefault(_streamToAsyncIterator);

var _filter = require('./filter');

var _filter2 = _interopRequireDefault(_filter);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var getValue = function getValue(qb) {
  return qb.first().then(function (row) {
    return (0, _lodash.first)((0, _values2.default)(row));
  });
}; /*
    * Copyright (c) 2017 Roman Lakhtadyr
    *
    * Permission is hereby granted, free of charge, to any person obtaining a copy
    * of this software and associated documentation files (the "Software"), to deal
    * in the Software without restriction, including without limitation the rights
    * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    * copies of the Software, and to permit persons to whom the Software is
    * furnished to do so, subject to the following conditions:
    *
    * The above copyright notice and this permission notice shall be included in all
    * copies or substantial portions of the Software.
    *
    * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    * SOFTWARE.
    */

var BaseQuery = function () {
  function BaseQuery(modelClass) {
    var filters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
    var relationNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
    (0, _classCallCheck3.default)(this, BaseQuery);

    this.modelClass = modelClass;
    this.filters = filters;
    this.relationNames = relationNames;
    this.fluorite = modelClass.fluorite;
    this.transaction = this.fluorite.transaction;

    this.applyScopes();

    this.then = this.modelClass.fluorite.ns.bind(this.then);
  }

  (0, _createClass3.default)(BaseQuery, [{
    key: 'applyScopes',
    value: function applyScopes() {
      var _this = this;

      var _loop = function _loop(property) {
        var scope = _this.modelClass.scopes[property];
        _this[property] = function () {
          for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }

          return scope.apply(undefined, [_this].concat(args));
        };
      };

      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = undefined;

      try {
        for (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(this.modelClass.scopes)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var property = _step.value;

          _loop(property);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    }
  }, {
    key: 'makeModel',
    value: function makeModel(rowData) {
      return this.fluorite.wrapModel(rowData, this.modelClass);
    }
  }, {
    key: 'prepareQuery',
    value: function prepareQuery() {
      var knexQuery = this.knexQueryTransacting();
      this.filters.forEach(function (f) {
        return f(knexQuery);
      });
      return knexQuery;
    }
  }, {
    key: 'knexQueryTransacting',
    value: function knexQueryTransacting() {
      if (this.transaction.isTransacting()) {
        return this.transaction.currentTransaction().from(this.modelClass.table);
      }

      return this.modelClass.knex(this.modelClass.table);
    }
  }, {
    key: 'filter',
    value: function filter(attributes) {
      return this.query((0, _filter2.default)(attributes, this.modelClass.table));
    }
  }, {
    key: 'query',
    value: function query(callback) {
      return new this.constructor(this.modelClass, [].concat((0, _toConsumableArray3.default)(this.filters), [callback]), this.relationNames);
    }
  }, {
    key: 'including',
    value: function including() {
      for (var _len2 = arguments.length, relationNames = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        relationNames[_key2] = arguments[_key2];
      }

      return new this.constructor(this.modelClass, this.filters, [].concat((0, _toConsumableArray3.default)(this.relationNames), relationNames));
    }
  }, {
    key: 'toString',
    value: function toString() {
      return this.prepareQuery().toString();
    }
  }, {
    key: 'limit',
    value: function limit(number) {
      return this.query(function (q) {
        return q.limit(number);
      });
    }
  }, {
    key: 'offset',
    value: function offset(number) {
      return this.query(function (q) {
        return q.offset(number);
      });
    }
  }, {
    key: 'orderBy',
    value: function orderBy(column, direction) {
      return this.query(function (q) {
        return q.orderBy(column, direction);
      });
    }
  }, {
    key: 'create',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee(attributes) {
        var model;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                model = this.modelClass.create(attributes);
                _context.next = 3;
                return model.save();

              case 3:
                return _context.abrupt('return', model);

              case 4:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function create(_x3) {
        return _ref.apply(this, arguments);
      }

      return create;
    }()
  }, {
    key: 'update',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(attributes) {
        return _regenerator2.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.prepareQuery().update(attributes);

              case 2:
              case 'end':
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function update(_x4) {
        return _ref2.apply(this, arguments);
      }

      return update;
    }()
  }, {
    key: 'remove',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3() {
        return _regenerator2.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.next = 2;
                return this.prepareQuery().delete();

              case 2:
              case 'end':
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function remove() {
        return _ref3.apply(this, arguments);
      }

      return remove;
    }()
  }, {
    key: 'prepareSelectQuery',
    value: function () {
      var _ref4 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee4() {
        var query;
        return _regenerator2.default.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                query = this.prepareQuery();

                query.select(this.modelClass.table + '.*');
                return _context4.abrupt('return', query);

              case 3:
              case 'end':
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));

      function prepareSelectQuery() {
        return _ref4.apply(this, arguments);
      }

      return prepareSelectQuery;
    }()
  }, {
    key: 'createModels',
    value: function () {
      var _ref5 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee5(rowData) {
        var ModelClass, models;
        return _regenerator2.default.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(rowData.length === 0)) {
                  _context5.next = 2;
                  break;
                }

                return _context5.abrupt('return', []);

              case 2:
                ModelClass = this.modelClass;
                models = rowData.map(function (row) {
                  return new ModelClass(row, (0, _assign2.default)({}, row));
                });
                _context5.next = 6;
                return _promise2.default.all(this.relationNames.map(function (name) {
                  var _name$split = name.split('.', 2),
                      _name$split2 = (0, _slicedToArray3.default)(_name$split, 2),
                      head = _name$split2[0],
                      tail = _name$split2[1];

                  var relation = (0, _lodash.first)(models)[head]();
                  return relation.extractRelatedData(rowData, head, models, tail);
                }));

              case 6:
                return _context5.abrupt('return', models);

              case 7:
              case 'end':
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));

      function createModels(_x5) {
        return _ref5.apply(this, arguments);
      }

      return createModels;
    }()

    // eslint-disable-next-line class-methods-use-this

  }, {
    key: 'eval',
    value: function () {
      var _ref6 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee6() {
        return _regenerator2.default.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                throw new Error('Method not implemented');

              case 1:
              case 'end':
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));

      function _eval() {
        return _ref6.apply(this, arguments);
      }

      return _eval;
    }()
  }, {
    key: 'then',
    value: function () {
      var _ref7 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee7(resolve, reject) {
        var result;
        return _regenerator2.default.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                _context7.prev = 0;
                _context7.next = 3;
                return this.eval();

              case 3:
                result = _context7.sent;
                return _context7.abrupt('return', resolve(result));

              case 7:
                _context7.prev = 7;
                _context7.t0 = _context7['catch'](0);
                return _context7.abrupt('return', reject(_context7.t0));

              case 10:
              case 'end':
                return _context7.stop();
            }
          }
        }, _callee7, this, [[0, 7]]);
      }));

      function then(_x6, _x7) {
        return _ref7.apply(this, arguments);
      }

      return then;
    }()
  }, {
    key: 'catch',
    value: function () {
      var _ref8 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee8(reject) {
        return _regenerator2.default.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                return _context8.abrupt('return', this.then(_lodash.identity, reject));

              case 1:
              case 'end':
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));

      function _catch(_x8) {
        return _ref8.apply(this, arguments);
      }

      return _catch;
    }()
  }]);
  return BaseQuery;
}();

var SingleRowQuery = exports.SingleRowQuery = function (_BaseQuery) {
  (0, _inherits3.default)(SingleRowQuery, _BaseQuery);

  function SingleRowQuery() {
    (0, _classCallCheck3.default)(this, SingleRowQuery);
    return (0, _possibleConstructorReturn3.default)(this, (SingleRowQuery.__proto__ || (0, _getPrototypeOf2.default)(SingleRowQuery)).apply(this, arguments));
  }

  (0, _createClass3.default)(SingleRowQuery, [{
    key: 'eval',
    value: function () {
      var _ref9 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee9() {
        var query, rowData;
        return _regenerator2.default.wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                query = this.prepareSelectQuery();
                _context9.next = 3;
                return query;

              case 3:
                rowData = _context9.sent;

                if (!(rowData.length === 1)) {
                  _context9.next = 6;
                  break;
                }

                return _context9.abrupt('return', this.createModels(rowData).then(function (models) {
                  return (0, _lodash.first)(models);
                }));

              case 6:
                if (!(rowData.length === 0)) {
                  _context9.next = 8;
                  break;
                }

                throw new this.modelClass.NotFoundError('Entity not found');

              case 8:
                throw new this.modelClass.IntegrityError('More than one entity returned');

              case 9:
              case 'end':
                return _context9.stop();
            }
          }
        }, _callee9, this);
      }));

      function _eval() {
        return _ref9.apply(this, arguments);
      }

      return _eval;
    }()
  }]);
  return SingleRowQuery;
}(BaseQuery);

var MultipleRowsQuery = exports.MultipleRowsQuery = function (_BaseQuery2) {
  (0, _inherits3.default)(MultipleRowsQuery, _BaseQuery2);

  function MultipleRowsQuery() {
    (0, _classCallCheck3.default)(this, MultipleRowsQuery);
    return (0, _possibleConstructorReturn3.default)(this, (MultipleRowsQuery.__proto__ || (0, _getPrototypeOf2.default)(MultipleRowsQuery)).apply(this, arguments));
  }

  (0, _createClass3.default)(MultipleRowsQuery, [{
    key: 'count',
    value: function count() {
      var column = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

      return getValue(this.prepareQuery().count(column));
    }
  }, {
    key: 'min',
    value: function min(column) {
      return getValue(this.prepareQuery().min(column));
    }
  }, {
    key: 'max',
    value: function max(column) {
      return getValue(this.prepareQuery().max(column));
    }
  }, {
    key: 'sum',
    value: function sum(column) {
      return getValue(this.prepareQuery().sum(column));
    }
  }, {
    key: 'avg',
    value: function avg(column) {
      return getValue(this.prepareQuery().avg(column));
    }
  }, {
    key: 'pluck',
    value: function pluck(column) {
      return this.prepareQuery().pluck(column);
    }
  }, {
    key: 'single',
    value: function single() {
      var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (!(0, _lodash.isEmpty)(attributes)) {
        return this.filter(attributes).single();
      }

      return new SingleRowQuery(this.modelClass, this.filters);
    }
  }, {
    key: 'first',
    value: function first() {
      var attributes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.single(attributes).limit(1);
    }
  }, {
    key: 'eval',
    value: function () {
      var _ref10 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee10() {
        var query, rowData;
        return _regenerator2.default.wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                query = this.prepareSelectQuery();
                _context10.next = 3;
                return query;

              case 3:
                rowData = _context10.sent;
                return _context10.abrupt('return', this.createModels(rowData));

              case 5:
              case 'end':
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));

      function _eval() {
        return _ref10.apply(this, arguments);
      }

      return _eval;
    }()
  }, {
    key: _symbol2.default.asyncIterator,
    value: function value() {
      var query = this.prepareSelectQuery();

      return function () {
        var _ref11 = _asyncGenerator3.default.wrap(_regenerator2.default.mark(function _callee11() {
          var _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, _value, rowData;

          return _regenerator2.default.wrap(function _callee11$(_context11) {
            while (1) {
              switch (_context11.prev = _context11.next) {
                case 0:
                  _iteratorNormalCompletion2 = true;
                  _didIteratorError2 = false;
                  _iteratorError2 = undefined;
                  _context11.prev = 3;
                  _iterator2 = (0, _asyncIterator3.default)(new _streamToAsyncIterator2.default(query.stream()));

                case 5:
                  _context11.next = 7;
                  return _asyncGenerator3.default.await(_iterator2.next());

                case 7:
                  _step2 = _context11.sent;
                  _iteratorNormalCompletion2 = _step2.done;
                  _context11.next = 11;
                  return _asyncGenerator3.default.await(_step2.value);

                case 11:
                  _value = _context11.sent;

                  if (_iteratorNormalCompletion2) {
                    _context11.next = 19;
                    break;
                  }

                  rowData = _value;
                  _context11.next = 16;
                  return this.makeModel(rowData);

                case 16:
                  _iteratorNormalCompletion2 = true;
                  _context11.next = 5;
                  break;

                case 19:
                  _context11.next = 25;
                  break;

                case 21:
                  _context11.prev = 21;
                  _context11.t0 = _context11['catch'](3);
                  _didIteratorError2 = true;
                  _iteratorError2 = _context11.t0;

                case 25:
                  _context11.prev = 25;
                  _context11.prev = 26;

                  if (!(!_iteratorNormalCompletion2 && _iterator2.return)) {
                    _context11.next = 30;
                    break;
                  }

                  _context11.next = 30;
                  return _asyncGenerator3.default.await(_iterator2.return());

                case 30:
                  _context11.prev = 30;

                  if (!_didIteratorError2) {
                    _context11.next = 33;
                    break;
                  }

                  throw _iteratorError2;

                case 33:
                  return _context11.finish(30);

                case 34:
                  return _context11.finish(25);

                case 35:
                case 'end':
                  return _context11.stop();
              }
            }
          }, _callee11, this, [[3, 21, 25, 35], [26,, 30, 34]]);
        }));

        function asyncIterator() {
          return _ref11.apply(this, arguments);
        }

        return asyncIterator;
      }().bind(this);
    }
  }]);
  return MultipleRowsQuery;
}(BaseQuery);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,