'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _getIterator2 = require('babel-runtime/core-js/get-iterator');

var _getIterator3 = _interopRequireDefault(_getIterator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/*
 * Copyright (c) 2017 Roman Lakhtadyr
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

var ops = {
  eq: '=',
  ne: '!=',
  gt: '>',
  gte: '>=',
  lt: '<',
  lte: '<=',
  in: 'IN',
  like: 'LIKE'
};

var opRegExp = /^(.+)__(.+)$/;
var defaultOp = '=';

var getOperator = function getOperator(name) {
  if (!(name in ops)) {
    throw new TypeError('Unknown operator - ' + name);
  }
  return ops[name];
};

exports.default = function (attributes, table) {
  return function (qb) {
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;

    try {
      for (var _iterator = (0, _getIterator3.default)((0, _keys2.default)(attributes)), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
        var key = _step.value;

        if (opRegExp.test(key)) {
          var _opRegExp$exec = opRegExp.exec(key),
              _opRegExp$exec2 = (0, _slicedToArray3.default)(_opRegExp$exec, 3),
              field = _opRegExp$exec2[1],
              op = _opRegExp$exec2[2];

          var operator = getOperator(op);
          if (operator === 'IN') {
            qb.whereIn(table + '.' + field, attributes[key]);
          } else {
            qb.where(table + '.' + field, operator, attributes[key]);
          }
        } else {
          qb.where(table + '.' + key, defaultOp, attributes[key]);
        }
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return) {
          _iterator.return();
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9maWx0ZXIuanMiXSwibmFtZXMiOlsib3BzIiwiZXEiLCJuZSIsImd0IiwiZ3RlIiwibHQiLCJsdGUiLCJpbiIsImxpa2UiLCJvcFJlZ0V4cCIsImRlZmF1bHRPcCIsImdldE9wZXJhdG9yIiwibmFtZSIsIlR5cGVFcnJvciIsImF0dHJpYnV0ZXMiLCJ0YWJsZSIsInFiIiwia2V5IiwidGVzdCIsImV4ZWMiLCJmaWVsZCIsIm9wIiwib3BlcmF0b3IiLCJ3aGVyZUluIiwid2hlcmUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzQkEsSUFBTUEsTUFBTTtBQUNWQyxNQUFJLEdBRE07QUFFVkMsTUFBSSxJQUZNO0FBR1ZDLE1BQUksR0FITTtBQUlWQyxPQUFLLElBSks7QUFLVkMsTUFBSSxHQUxNO0FBTVZDLE9BQUssSUFOSztBQU9WQyxNQUFJLElBUE07QUFRVkMsUUFBTTtBQVJJLENBQVo7O0FBV0EsSUFBTUMsV0FBVyxjQUFqQjtBQUNBLElBQU1DLFlBQVksR0FBbEI7O0FBRUEsSUFBTUMsY0FBYyxTQUFkQSxXQUFjLENBQUNDLElBQUQsRUFBVTtBQUM1QixNQUFJLEVBQUVBLFFBQVFaLEdBQVYsQ0FBSixFQUFvQjtBQUNsQixVQUFNLElBQUlhLFNBQUoseUJBQW9DRCxJQUFwQyxDQUFOO0FBQ0Q7QUFDRCxTQUFPWixJQUFJWSxJQUFKLENBQVA7QUFDRCxDQUxEOztrQkFPZSxVQUFDRSxVQUFELEVBQWFDLEtBQWI7QUFBQSxTQUF1QixVQUFDQyxFQUFELEVBQVE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFDNUMsc0RBQWtCLG9CQUFZRixVQUFaLENBQWxCLDRHQUEyQztBQUFBLFlBQWhDRyxHQUFnQzs7QUFDekMsWUFBSVIsU0FBU1MsSUFBVCxDQUFjRCxHQUFkLENBQUosRUFBd0I7QUFBQSwrQkFDQVIsU0FBU1UsSUFBVCxDQUFjRixHQUFkLENBREE7QUFBQTtBQUFBLGNBQ2JHLEtBRGE7QUFBQSxjQUNOQyxFQURNOztBQUV0QixjQUFNQyxXQUFXWCxZQUFZVSxFQUFaLENBQWpCO0FBQ0EsY0FBSUMsYUFBYSxJQUFqQixFQUF1QjtBQUNyQk4sZUFBR08sT0FBSCxDQUFjUixLQUFkLFNBQXVCSyxLQUF2QixFQUFnQ04sV0FBV0csR0FBWCxDQUFoQztBQUNELFdBRkQsTUFFTztBQUNMRCxlQUFHUSxLQUFILENBQVlULEtBQVosU0FBcUJLLEtBQXJCLEVBQThCRSxRQUE5QixFQUF3Q1IsV0FBV0csR0FBWCxDQUF4QztBQUNEO0FBQ0YsU0FSRCxNQVFPO0FBQ0xELGFBQUdRLEtBQUgsQ0FBWVQsS0FBWixTQUFxQkUsR0FBckIsRUFBNEJQLFNBQTVCLEVBQXVDSSxXQUFXRyxHQUFYLENBQXZDO0FBQ0Q7QUFDRjtBQWIyQztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBYzdDLEdBZGM7QUFBQSxDIiwiZmlsZSI6ImZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTcgUm9tYW4gTGFraHRhZHlyXG4gKlxuICogUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuICogb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuICogaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuICogdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuICogY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4gKiBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuICpcbiAqIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluIGFsbFxuICogY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbiAqXG4gKiBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4gKiBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbiAqIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuICogQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuICogTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbiAqIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFXG4gKiBTT0ZUV0FSRS5cbiAqL1xuXG5jb25zdCBvcHMgPSB7XG4gIGVxOiAnPScsXG4gIG5lOiAnIT0nLFxuICBndDogJz4nLFxuICBndGU6ICc+PScsXG4gIGx0OiAnPCcsXG4gIGx0ZTogJzw9JyxcbiAgaW46ICdJTicsXG4gIGxpa2U6ICdMSUtFJyxcbn07XG5cbmNvbnN0IG9wUmVnRXhwID0gL14oLispX18oLispJC87XG5jb25zdCBkZWZhdWx0T3AgPSAnPSc7XG5cbmNvbnN0IGdldE9wZXJhdG9yID0gKG5hbWUpID0+IHtcbiAgaWYgKCEobmFtZSBpbiBvcHMpKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVW5rbm93biBvcGVyYXRvciAtICR7bmFtZX1gKTtcbiAgfVxuICByZXR1cm4gb3BzW25hbWVdO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgKGF0dHJpYnV0ZXMsIHRhYmxlKSA9PiAocWIpID0+IHtcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMoYXR0cmlidXRlcykpIHtcbiAgICBpZiAob3BSZWdFeHAudGVzdChrZXkpKSB7XG4gICAgICBjb25zdCBbLCBmaWVsZCwgb3BdID0gb3BSZWdFeHAuZXhlYyhrZXkpO1xuICAgICAgY29uc3Qgb3BlcmF0b3IgPSBnZXRPcGVyYXRvcihvcCk7XG4gICAgICBpZiAob3BlcmF0b3IgPT09ICdJTicpIHtcbiAgICAgICAgcWIud2hlcmVJbihgJHt0YWJsZX0uJHtmaWVsZH1gLCBhdHRyaWJ1dGVzW2tleV0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcWIud2hlcmUoYCR7dGFibGV9LiR7ZmllbGR9YCwgb3BlcmF0b3IsIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHFiLndoZXJlKGAke3RhYmxlfS4ke2tleX1gLCBkZWZhdWx0T3AsIGF0dHJpYnV0ZXNba2V5XSk7XG4gICAgfVxuICB9XG59O1xuIl19